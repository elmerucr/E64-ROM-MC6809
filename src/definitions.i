; indirect interrupt vectors in ram
VECTOR_ILLOP_INDIRECT	equ	$0100
VECTOR_SWI3_INDIRECT	equ	$0102
VECTOR_SWI2_INDIRECT	equ	$0104
VECTOR_FIRQ_INDIRECT	equ	$0106
VECTOR_IRQ_INDIRECT	equ	$0108
VECTOR_SWI_INDIRECT	equ	$010a
VECTOR_NMI_INDIRECT	equ	$010c
VECTOR_RESET_INDIRECT	equ	$010e
VECTOR_VICV_INDIRECT	equ	$0110
TIMER0_VECTOR_INDIRECT	equ	$0112
TIMER1_VECTOR_INDIRECT	equ	$0114
TIMER2_VECTOR_INDIRECT	equ	$0116
TIMER3_VECTOR_INDIRECT	equ	$0118
TIMER4_VECTOR_INDIRECT	equ	$011a
TIMER5_VECTOR_INDIRECT	equ	$011c
TIMER6_VECTOR_INDIRECT	equ	$011e
TIMER7_VECTOR_INDIRECT	equ	$0120

; vicv
VICV		equ	$d000
VICV_SR		equ	VICV

; blit general
BLIT		equ	$d100
BLIT_CR		equ	BLIT
BLIT_NO		equ	BLIT+$1
BLIT_HBS	equ	BLIT+$2
BLIT_DATA	equ	BLIT+$3
BLIT_XPOS	equ	BLIT+$4		; 16 bit
BLIT_YPOS	equ	BLIT+$6		; 16 bit
BLIT_CLC	equ	BLIT+$8		; 16 bit
BLIT_HBC	equ	BLIT+$a		; 16 bit
;
;
BLIT_PAGE	equ	BLIT+$e		; 16 bit

; blit specific to active blit (register 1)
BLIT_NO_OF_TILES	equ	BLIT+$10	; 16 bit read only
BLIT_CURSOR_POS		equ	BLIT+$12	; 16 bit pointer
BLIT_BLINK_INTERVAL	equ	BLIT+$14	; read/write
BLIT_PITCH		equ	BLIT+$15	; read only
BLIT_TILE_CHAR		equ	BLIT+$16	; read/write
BLIT_TILE_FG_COLOR	equ	BLIT+$18	; read/write
BLIT_TILE_BG_COLOR	equ	BLIT+$1a	; read/write

BLIT_CMD_SWAP_BUFFERS		equ	%00000001
BLIT_CMD_CLEAR_FRAMEBUFFER	equ	%00000010
BLIT_CMD_DRAW_BORDER		equ	%00000100
BLIT_CMD_DRAW_BLIT		equ	%00001000

BLIT_CMD_RESET_CURSOR		equ	%10000000
BLIT_CMD_PUT_SYMBOL_AT_CURSOR	equ	%10000001
BLIT_CMD_DECREASE_CURSOR_POS	equ	%11000000
BLIT_CMD_INCREASE_CURSOR_POS	equ	%11000001
BLIT_CMD_ACTIVATE_CURSOR	equ	%11100000
BLIT_CMD_DEACTIVATE_CURSOR	equ	%11100001
BLIT_CMD_PROCESS_CURSOR_STATE	equ	%11100010

; blit descriptors
BLIT_D_00	equ	$d800
BLIT_D_01	equ	$d808
BLIT_D_02	equ	$d810
BLIT_D_03	equ	$d818
BLIT_D_04	equ	$d820
BLIT_D_05	equ	$d828
BLIT_D_06	equ	$d830
BLIT_D_07	equ	$d838
BLIT_D_08	equ	$d840
BLIT_D_09	equ	$d848
BLIT_D_0a	equ	$d850
BLIT_D_0b	equ	$d858
BLIT_D_0c	equ	$d860
BLIT_D_0d	equ	$d868
BLIT_D_0e	equ	$d870
BLIT_D_0f	equ	$d878

; timer
TIMER		equ	$d300
TIMER_SR	equ	TIMER
TIMER_CR	equ	TIMER+$01
TIMER_BPM	equ	TIMER+$02	; 16 bits

; sid
SID	equ	$d400

SID0	equ	SID		; sid 0 base
SID0F	equ	SID0+$00
SID0P	equ	SID0+$02
SID0VC	equ	SID0+$04
SID0AD	equ	SID0+$05
SID0SR	equ	SID0+$06
SID0V	equ	SID0+$1b

SID1	equ	SID+$20		; sid 1 base
SID1F	equ	SID1+$00
SID1P	equ	SID1+$02
SID1VC	equ	SID1+$04
SID1AD	equ	SID1+$05
SID1SR	equ	SID1+$06
SID1V	equ	SID1+$1b

SIDM	equ	SID+$80		; mixer base
SIDM0L	equ	SIDM+$00
SIDM0R	equ	SIDM+$01
SIDM1L	equ	SIDM+$02
SIDM1R	equ	SIDM+$03

; cia
CIA	equ	$d500		; CIA base
CIA_SR	equ	CIA		; status register
CIA_CR	equ	CIA+$01		; control register
CIA_KRD	equ	CIA+$02		; keyboard repeat delay in 10ms
CIA_KRS	equ	CIA+$03		; keyboard repeat speed in 10ms
CIA_AC	equ	CIA+$04		; ascii code
CIA_KSA	equ	CIA+$80		; start of key state array

CIA_GENERATE_EVENTS		equ	%00000001
CIA_CMD_CLEAR_EVENT_LIST	equ	%10000000

; ascii
ASCII_LF		equ	$0a
ASCII_CURSOR_DOWN	equ	$11
ASCII_CURSOR_RIGHT	equ	$1d
ASCII_CURSOR_UP		equ	$91
ASCII_CURSOR_LEFT	equ	$9d
